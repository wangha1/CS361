My kwic has a very simple logic, it has five events, callAddText, callIndex, calllistPairs, callReset and callConstructor. callConstructor will only automatically happened once when program executed, it will initial the text, periodsToBreaks and ignoreWord variables, periodsToBreaks and ignoreWords would never change after they initialized, Text only change when callAddText happened. When callindex happened, it will produce the index base on Text variable (a string), note that the parse also happened on this event, so it will parse the text everytime on this event rather than after set up the Text variable. On the other hand, anytime calllistPairs happenend, it will list all the pairs that appear more than twice. The event callReset just simply reset the Text variable, the periodsToBreaks and ignoreWords are constant.
The program has simple logic, it might waste some performance because you do the parse and list pairs everytime you call the index() or listPairs() even the Text didn't acually changed, but it's practical and easy to debug. Because it is clear that which event do which job, so you just monitor your variables so that you can know what's going wrong.
State changes when calladdText, callReset or callConstructor happened, the other two events only produce the output but doesn't actually change current state. 
